@function chunk($list, $size) {
  $result: ();
  $n: ceil(length($list) / $size);
  $temp-index: 0;

  @for $i from 1 through $n {
    $temp-list: ();

    @for $j from 1+$temp-index through $size+$temp-index {
      @if $j <=length($list) {
        $temp-list: append($temp-list, nth($list, $j));
      }
    }

    $result: append($result, $temp-list);
    $temp-index: $temp-index+$size;
  }

  @return $result;
}

@function slice($list, $start: 1, $end: length($list)) {
  $result: null;

  @if type-of($start) !=number or type-of($end) !=number {
    @warn "Either $start or $end are not a number for `slice`.";
  }

  @else if $start>$end {
    @warn "The start index has to be lesser than or equals to the end index for `slice`.";
  }

  @else if $start < 1 or $end < 1 {
    @warn "List indexes must be non-zero integers for `slice`.";
  }

  @else if $start>length($list) {
    @warn "List index is #{$start} but list is only #{length($list)} item long for `slice`.";
  }

  @else if $end>length($list) {
    @warn "List index is #{$end} but list is only #{length($list)} item long for `slice`.";
  }

  @else {
    $result: ();

    @for $i from $start through $end {
      $result: append($result, nth($list, $i));
    }
  }

  @return $result;
}

@function sum($list, $force: false) {
  $result: 0;

  @each $item in $list {
    @if type-of($item)==number {
      @if $force and unit($item) {
        $item: $item/ ($item * 0 + 1);
      }

      @if unitless($item) {
        $result: $result + $item;
      }
    }
  }

  @return $result;
}
